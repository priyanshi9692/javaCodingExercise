package NumericProblems;

public class FallSkewMean {
    public static float calMeanCal(float[] arr){
        float average = 0;
        float sum = 0;
        int length = arr.length;
        for(int i =0; i<arr.length; i++){
            sum+=arr[i];
        }
        average = sum/length;
        return average;
    }

    public static float calSkewCal(float [] arr, int n)
    {
        float mean = calMeanCal(arr);
        float sum3 = 0;
        for(int i =0; i<n; i++){
            sum3 += Math.pow(arr[i]-mean,3);
        }
        float div = (float)1/n;
        float m3 = div*sum3;
        float sum2 = 0;
        for(int i =0; i<n; i++) {
            sum2 += (float) Math.pow(arr[i] - mean, 2);
        }
        float m2 = div*sum2;
        float m2E3 = (float)Math.sqrt(Math.pow(m2,3));
        float skewness =  (m3/m2E3);

        return skewness;

    }
public static float calKurtCal(float[] arr, int n){
        // Standard Kurt formula
        float mean = calMeanCal(arr);
        float sum4 = 0;
        for(int i =0; i<n; i++){
            sum4+= (float)Math.pow(arr[i]-mean,4);
        }
        float div = (float)1/n;
        float m4 = div*sum4;
        float sum2 = 0;
        for(int i =0; i<n; i++) {
                sum2 += (float) Math.pow(arr[i] - mean, 2);
            }
        float m2 = div*sum2;
        float kurt = m4/(float)Math.pow(m2,2);
        return kurt-3;
}
    public static float meanAbs(float[] arr){
        float sum =0;
        for(int i =0; i<arr.length; i++){
            sum+=Math.abs(arr[i]);
        }
        return sum/arr.length;
    }
    public static float absValue(float[] arr){
        float sum =0;
        for(int i =0; i<arr.length; i++){
            float num = Math.abs(arr[i]-calMeanCal(arr));
            sum +=num;
        }
        return sum/arr.length;
    }
    public static float kurtAbs(float[] arr, int n){

        float mean = meanAbs(arr);
        float sum4 = 0;
        for(int i =0; i<n; i++){
            sum4+= Math.pow(Math.abs(arr[i])-mean,4);
        }
//        System.out.println("Sum: "+sum4);
        float div = (float)1/n;
        float m4 = div*sum4;
        float sum2 = 0;
        for(int i =0; i<n; i++) {
            sum2 += (float) Math.pow(Math.abs(arr[i]) - mean, 2);
        }
        float m2 = div*sum2;
        float kurt = m4/(float)Math.pow(m2,2);
        return kurt-3;

    }
    public static float skewAbs(float [] arr, int n) {
        float mean = meanAbs(arr);
        float sum3 = 0;
        for(int i =0; i<n; i++){
            sum3 += Math.pow(Math.abs(arr[i])-mean,3);
        }
        float div = (float)1/n;
        float m3 = div*sum3;
        float sum2 = 0;
        for(int i =0; i<n; i++) {
            sum2 += (float) Math.pow(Math.abs(arr[i]) - mean, 2);
        }
        float m2 = div*sum2;
        float m2E3 = (float)Math.sqrt(Math.pow(m2,3));
        float skewness =  (m3/m2E3);

        return skewness;

    }
    public static float[] calculateMag(int[] X, int [] Y, int[]Z){
        float [] mag = new float[X.length];
        for (int i = 0; i < X.length; i++) {
            float x = X[i];
            float y = Y[i];
            float z = Z[i];
            mag[i] = magnitude(x, y, z);
        }
        return mag;
    }
    public static float magnitude(float x, float y, float z){
        return (float)(x*x+y*y+z*z);
    }
    public static void main(String[] args){
        FallSkewMean obj = new FallSkewMean();
        float arrX[] = {-0.1893158f,
                -0.27088928f,
                -0.11592102f,
                -0.05493164f,
                -0.10221863f,
                -0.086380005f,
                -0.094818115f,
                -0.095581055f,
                -0.08810425f,
                -0.09718323f,
                -0.09089661f,
                -0.09234619f,
                -0.11198425f,-0.11341858f,
                -0.12988281f,
                -0.10128784f,
                -0.13317871f,
                -0.114868164f,
                -0.11462402f,
                -0.118270874f,
                -0.115448f,
                -0.11125183f,
                -0.114730835f,
                -0.12086487f,
                -0.119384766f,
                -0.116744995f,
                -0.12113953f,
                -0.11517334f,
                -0.117004395f,
                -0.1133728f,
                -0.11958313f,
                -0.11151123f,
                -0.118515015f,
                -0.12579346f,
                -0.11576843f,
                -0.12086487f,
                -0.11764526f,
                -0.12495422f,
                -0.119155884f,
                -0.113861084f,
                -0.120529175f,
                -0.11895752f,
                -0.11907959f,
                -0.12869263f,
                -0.1171875f,
                -0.115753174f,
                -0.113082886f,
                -0.12208557f,
                -0.113967896f,
                -0.115478516f,
                -0.11795044f,
                -0.11984253f,
                -0.12472534f,
                -0.12055969f,
                -0.11463928f,
                -0.110198975f,
                -0.11659241f,
                -0.111831665f,
                -0.11605835f,
                -0.11540222f,
                -0.11468506f,
                -0.11607361f,
                -0.10656738f,
                -0.11766052f,
                -0.123809814f,
                -0.11958313f,
                -0.115097046f,
                -0.115097046f,
                -0.12017822f,
                -0.12182617f,
                -0.12339783f,
                -0.11553955f,
                -0.11495972f,
                -0.1083374f,
                -0.12272644f,
                -0.124923706f,
                -0.11477661f,
                -0.115356445f,
                -0.111953735f,
                -0.118927f,
                -0.1136322f,
                -0.12728882f,
                -0.119781494f,
                -0.11949158f,
                -0.11477661f,
                -0.120666504f,
                -0.11785889f,
                -0.11633301f,
                -0.11392212f,
                -0.12994385f,
                -0.11457825f,
                -0.114715576f,
                -0.12258911f,
                -0.12434387f,
                -0.11619568f,
                -0.117263794f,
                -0.117996216f,
                -0.1158905f,
                -0.11463928f,
                -0.12232971f,
                -0.118637085f,
                -0.12069702f,
                -0.12461853f,
                -0.12451172f,
                -0.12823486f,
                -0.12590027f,
                -0.10784912f,
                -0.12387085f,
                -0.10998535f,
                -0.12550354f,
                -0.12686157f,
                -0.11306763f,
                -0.12315369f,
                -0.122039795f,
                -0.123550415f,
                -0.120162964f,
                -0.121917725f,
                -0.1211853f,
                -0.12609863f,
                -0.124313354f,
                -0.11929321f,
                -0.116485596f,
                -0.1138916f,
                -0.118927f,
                -0.11810303f,
                -0.12382507f,
                -0.12220764f,
                -0.12931824f,
                -0.11747742f,
                -0.11300659f,
                -0.112976074f,
                -0.117126465f,
                -0.11929321f,
                -0.11968994f,
                -0.11639404f,
                -0.11778259f,
                -0.12321472f,
                -0.10861206f,
                -0.123672485f,
                -0.115737915f,
                -0.12120056f,
                -0.13166809f,
                -0.12350464f,
                -0.121414185f,
                -0.12748718f,
                -0.12327576f,
                -0.11657715f,
                -0.12030029f,
                -0.1250763f,
                -0.12338257f,
                -0.12451172f,
                -0.124938965f,
                -0.12716675f,
                -0.122039795f,
                -0.11355591f,
                -0.11755371f,
                -0.11628723f,
                -0.12046814f,
                -0.120224f,
                -0.11727905f,
                -0.11917114f,
                -0.1197052f,
                -0.121795654f,
                -0.124420166f,
                -0.12437439f,
                -0.1181488f,
                -0.12059021f,
                -0.12084961f,
                -0.12452698f,
                -0.119522095f,
                -0.11541748f,
                -0.11451721f,
                -0.11882019f,
                -0.11514282f,
                -0.11817932f,
                -0.124435425f,
                -0.116378784f,
                -0.11264038f,
                -0.11846924f,
                -0.119003296f,
                -0.11904907f,
                -0.11393738f,
                -0.12361145f,
                -0.12251282f,
                -0.11294556f,
                -0.12042236f,
                -0.120224f,
                -0.12043762f,
                -0.11578369f,
                -0.120788574f,
                -0.11592102f,
                -0.11781311f,
                -0.11766052f,
                -0.1209259f,
                -0.12333679f,
                -0.12460327f,
                -0.11854553f,
                -0.11798096f,
                -0.118118286f,
                -0.11462402f,
                -0.123703f,
                -0.1179657f,
                -0.114715576f,
                -0.12489319f,
                -0.1204834f,
                -0.12545776f,
                -0.11352539f,
                -0.12295532f,
                -0.11250305f,
                -0.12802124f,
                -0.12182617f,
                -0.12049866f,
                -0.11576843f,
                -0.115112305f,
                -0.11968994f,
                -0.11424255f,
                -0.115997314f,
                -0.11003113f,
                -0.11314392f,
                -0.11114502f,
                -0.11152649f,
                -0.11172485f,
                -0.11541748f,
                -0.111450195f,
                -0.10946655f,
                -0.11378479f,
                -0.109298706f,
                -0.109817505f,
                -0.115615845f,
                -0.11645508f,
                -0.11174011f,
                -0.11103821f,
                -0.109558105f,
                -0.11116028f,
                -0.11351013f,
                -0.11506653f,
                -0.1177063f,
                -0.12023926f,
                -0.12336731f,
                -0.11604309f,
                -0.11392212f,
                -0.12315369f,
                -0.115234375f,
                -0.120224f,
                -0.12382507f,
                -0.12580872f,
                -0.11331177f,
                -0.12249756f,
                -0.11791992f,
                -0.11994934f};
        float arrY[] = {-1.267395f,
                -1.2653656f,
                -1.2650757f,
                -1.1845093f,
                -1.230133f,
                -1.2063293f,
                -1.2241669f,
                -1.2174072f,
                -1.2159119f,
                -1.2206421f,
                -1.2151642f,
                -1.2178345f,
                -1.2417603f,
                -1.2519073f,
                -1.2344055f,
                -1.2323761f,
                -1.2545776f,
                -1.2465363f,
                -1.2453308f,
                -1.2478027f,
                -1.250946f,
                -1.241394f,
                -1.2552795f,
                -1.2561035f,
                -1.2512054f,
                -1.2520752f,
                -1.2463837f,
                -1.2588959f,
                -1.242218f,
                -1.2498474f,
                -1.265686f,
                -1.2668152f,
                -1.2776337f,
                -1.2799377f,
                -1.2723083f,
                -1.2580261f,
                -1.2601624f,
                -1.2485657f,
                -1.2452698f,
                -1.2434082f,
                -1.2424469f,
                -1.2507935f,
                -1.2481384f,
                -1.2412262f,
                -1.244873f,
                -1.2367706f,
                -1.2472229f,
                -1.2404785f,
                -1.2379456f,
                -1.24086f,
                -1.2367401f,
                -1.2463226f,
                -1.2463989f,
                -1.2398834f,
                -1.236557f,
                -1.2261963f,
                -1.2469025f,
                -1.2370911f,
                -1.2404785f,
                -1.244339f,
                -1.2473602f,
                -1.2428894f,
                -1.2300415f,
                -1.2435608f,
                -1.2456665f,
                -1.2411957f,
                -1.2408142f,
                -1.2412415f,
                -1.2515411f,
                -1.24263f,
                -1.2533112f,
                -1.2424774f,
                -1.2476501f,
                -1.2319183f,
                -1.2401276f,
                -1.236969f,
                -1.2436371f,
                -1.2410126f,
                -1.2385712f,
                -1.2467804f,
                -1.2311554f,
                -1.2369537f,
                -1.2414093f,
                -1.2359619f,
                -1.2375183f,
                -1.2332153f,
                -1.2364807f,
                -1.2488403f,
                -1.2362366f,
                -1.2471466f,
                -1.2483215f,
                -1.2429504f,
                -1.2476959f,
                -1.242981f,
                -1.252533f,
                -1.2468414f,
                -1.2550812f,
                -1.2360535f,
                -1.2344971f,
                -1.2459106f,
                -1.2328949f,
                -1.2520447f,
                -1.2381287f,
                -1.2355652f,
                -1.2478027f,
                -1.24469f,
                -1.2393036f,
                -1.2284851f,
                -1.232254f,
                -1.2149963f,
                -1.2231598f,
                -1.235733f,
                -1.2371216f,
                -1.2264099f,
                -1.2325134f,
                -1.2492981f,
                -1.2400818f,
                -1.2319489f,
                -1.2342377f,
                -1.2407379f,
                -1.2352448f,
                -1.2398682f,
                -1.240982f,
                -1.2354431f,
                -1.2301941f,
                -1.2341919f,
                -1.2528381f,
                -1.2380219f,
                -1.2401886f,
                -1.2243805f,
                -1.2380371f,
                -1.2354431f,
                -1.2265167f,
                -1.24617f,
                -1.2497101f,
                -1.2486725f,
                -1.2439117f,
                -1.2280273f,
                -1.2346191f,
                -1.2486572f,
                -1.2578735f,
                -1.2569122f,
                -1.2822571f,
                -1.2650757f,
                -1.2858276f,
                -1.2744751f,
                -1.2753143f,
                -1.2776031f,
                -1.2771912f,
                -1.2689056f,
                -1.2754059f,
                -1.2727814f,
                -1.2787628f,
                -1.2837982f,
                -1.2800903f,
                -1.2872772f,
                -1.2766724f,
                -1.28125f,
                -1.2778473f,
                -1.2713318f,
                -1.2740021f,
                -1.2801208f,
                -1.2793884f,
                -1.2740784f,
                -1.2858124f,
                -1.2789459f,
                -1.2874298f,
                -1.279068f,
                -1.2787628f,
                -1.2787476f,
                -1.2812195f,
                -1.2762756f,
                -1.2776947f,
                -1.2799377f,
                -1.2768555f,
                -1.2832947f,
                -1.2733154f,
                -1.2732391f,
                -1.2841644f,
                -1.2808533f,
                -1.2807465f,
                -1.2803802f,
                -1.2827911f,
                -1.2806854f,
                -1.2729645f,
                -1.2726746f,
                -1.2734985f,
                -1.2798462f,
                -1.2760925f,
                -1.2823486f,
                -1.2816467f,
                -1.2833557f,
                -1.280716f,
                -1.2894287f,
                -1.2904358f,
                -1.2848053f,
                -1.2786865f,
                -1.2801208f,
                -1.2875519f,
                -1.2833252f,
                -1.2828674f,
                -1.2826385f,
                -1.2829285f,
                -1.280899f,
                -1.2823792f,
                -1.2758942f,
                -1.2736511f,
                -1.2702332f,
                -1.2813873f,
                -1.2761688f,
                -1.2723694f,
                -1.2799072f,
                -1.2732086f,
                -1.2788086f,
                -1.2802124f,
                -1.2650604f,
                -1.2780914f,
                -1.2615967f,
                -1.2724457f,
                -1.2571564f,
                -1.2649536f,
                -1.2686005f,
                -1.2680359f,
                -1.2724762f,
                -1.2619934f,
                -1.2617645f,
                -1.26268f,
                -1.2639313f,
                -1.262619f,
                -1.2691803f,
                -1.2764435f,
                -1.2616577f,
                -1.2638702f,
                -1.2710114f,
                -1.2715454f,
                -1.2682953f,
                -1.2755127f,
                -1.2778625f,
                -1.2760468f,
                -1.2669525f,
                -1.268753f,
                -1.2759552f,
                -1.270874f,
                -1.2740479f,
                -1.2768555f,
                -1.2805176f,
                -1.271698f,
                -1.2783356f,
                -1.2832336f,
                -1.280838f};
        float arrZ[]={
                9.732895f,
                9.691391f,
                9.696426f,
                9.721634f,
                9.725876f,
                9.74852f,
                9.748077f,
                9.7547f,
                9.75827f,
                9.75296f,
                9.756638f,
                9.760391f,
                9.724609f,
                9.736221f,
                9.758194f,
                9.716263f,
                9.801056f,
                9.738739f,
                9.740723f,
                9.743393f,
                9.756622f,
                9.754868f,
                9.760162f,
                9.76239f,
                9.757782f,
                9.757187f,
                9.753693f,
                9.751556f,
                9.737991f,
                9.743744f,
                9.72467f,
                9.715805f,
                9.759201f,
                9.756546f,
                9.746475f,
                9.787704f,
                9.755875f,
                9.7621f,
                9.749573f,
                9.760651f,
                9.753082f,
                9.762146f,
                9.745209f,
                9.775116f,
                9.7565155f,
                9.760239f,
                9.761948f,
                9.758621f,
                9.75444f,
                9.751373f,
                9.748764f,
                9.761719f,
                9.751709f,
                9.743195f,
                9.751175f,
                9.761551f,
                9.754837f,
                9.7668f,
                9.770142f,
                9.759308f,
                9.764053f,
                9.76236f,
                9.760513f,
                9.765259f,
                9.759094f,
                9.756851f,
                9.751633f,
                9.760483f,
                9.766754f,
                9.74794f,
                9.772598f,
                9.763138f,
                9.768402f,
                9.763733f,
                9.767548f,
                9.773788f,
                9.767044f,
                9.757919f,
                9.764328f,
                9.758682f,
                9.757568f,
                9.757858f,
                9.762665f,
                9.766495f,
                9.759476f,
                9.774292f,
                9.772003f,
                9.772781f,
                9.767044f,
                9.773788f,
                9.768494f,
                9.763489f,
                9.779251f,
                9.773605f,
                9.768494f,
                9.774368f,
                9.768402f,
                9.75679f,
                9.772842f,
                9.775864f,
                9.773331f,
                9.765778f,
                9.782074f,
                9.784821f,
                9.7834015f,
                9.776764f,
                9.770126f,
                9.770767f,
                9.76796f,
                9.779129f,
                9.776093f,
                9.776764f,
                9.771835f,
                9.779251f,
                9.7786255f,
                9.772232f,
                9.773239f,
                9.771957f,
                9.783798f,
                9.772446f,
                9.773712f,
                9.769836f,
                9.773148f,
                9.778976f,
                9.771042f,
                9.770737f,
                9.7630005f,
                9.77179f,
                9.762085f,
                9.778854f,
                9.739487f,
                9.754639f,
                9.757263f,
                9.7595825f,
                9.766403f,
                9.760345f,
                9.772583f,
                9.765808f,
                9.76796f,
                9.779022f,
                9.749451f,
                9.775085f,
                9.78006f,
                9.782455f,
                9.776047f,
                9.769501f,
                9.777161f,
                9.776184f,
                9.764725f,
                9.777664f,
                9.776749f,
                9.779495f,
                9.779633f,
                9.770813f,
                9.776108f,
                9.775604f,
                9.776901f,
                9.780289f,
                9.77803f,
                9.771866f,
                9.755295f,
                9.771927f,
                9.767761f,
                9.77066f,
                9.7715f,
                9.770889f,
                9.772385f,
                9.779251f,
                9.776993f,
                9.776993f,
                9.776016f,
                9.778351f,
                9.779404f,
                9.774063f,
                9.772079f,
                9.774261f,
                9.770004f,
                9.767593f,
                9.761017f,
                9.764221f,
                9.767929f,
                9.77179f,
                9.766373f,
                9.762482f,
                9.769287f,
                9.76033f,
                9.763031f,
                9.770706f,
                9.763428f,
                9.761642f,
                9.7582245f,
                9.768768f,
                9.765198f,
                9.7647705f,
                9.767868f,
                9.769119f,
                9.779175f,
                9.77449f,
                9.772003f,
                9.775085f,
                9.779739f,
                9.778122f,
                9.77359f,
                9.777145f,
                9.775833f,
                9.782181f,
                9.784012f,
                9.784485f,
                9.774368f,
                9.784042f,
                9.781998f,
                9.782013f,
                9.779648f,
                9.771103f,
                9.766113f,
                9.756149f,
                9.7539215f,
                9.745239f,
                9.7344055f,
                9.735962f,
                9.72287f,
                9.739914f,
                9.723755f,
                9.712387f,
                9.718704f,
                9.707687f,
                9.72374f,
                9.723236f,
                9.715363f,
                9.702377f,
                9.711914f,
                9.720367f,
                9.728699f,
                9.72644f,
                9.732193f,
                9.738617f,
                9.748871f,
                9.742691f,
                9.748169f,
                9.745407f,
                9.736755f,
                9.751343f,
                9.754379f,
                9.75946f,
                9.758743f,
                9.760239f,
                9.74791f,
                9.75824f,
                9.756882f,
                9.759064f
        };
        System.out.println(calMeanCal(arrX));
        System.out.println(calSkewCal(arrX,arrX.length));
        System.out.println(calKurtCal(arrX,arrX.length));
       System.out.println("arrXMeaN:"+meanAbs(arrX));
       System.out.println("arrXKurtosisABS: "+kurtAbs(arrX, arrX.length));
        System.out.println("arrXSkewABS: "+skewAbs(arrX,arrX.length));
        System.out.println(calMeanCal(arrY));
        System.out.println(calSkewCal(arrY,arrY.length));
        System.out.println(calKurtCal(arrY,arrY.length));
        System.out.println("arrYMeaN:"+meanAbs(arrY));
        System.out.println("arrYKurtosisABS: "+kurtAbs(arrY, arrY.length));
        System.out.println("arrYSkewABS: "+skewAbs(arrY,arrY.length));
        System.out.println(calMeanCal(arrZ));
        System.out.println(calSkewCal(arrZ,arrZ.length));
        System.out.println(calKurtCal(arrZ,arrZ.length));
        System.out.println("arrZMeaN:"+meanAbs(arrZ));
        System.out.println("arrZKurtosisABS: "+kurtAbs(arrZ, arrZ.length));
        System.out.println("arrZSkewABS: "+skewAbs(arrZ,arrZ.length));

    }
}
//    float X[] = {-0.1893158f,
//            -0.27088928f,
//            -0.11592102f,
//            -0.05493164f,
//            -0.10221863f,
//            -0.086380005f,
//            -0.094818115f,
//            -0.095581055f,
//            -0.08810425f,
//            -0.09718323f,
//            -0.09089661f,
//            -0.09234619f,
//            -0.11198425f,-0.11341858f,
//            -0.12988281f,
//            -0.10128784f,
//            -0.13317871f,
//            -0.114868164f,
//            -0.11462402f,
//            -0.118270874f,
//            -0.115448f,
//            -0.11125183f,
//            -0.114730835f,
//            -0.12086487f,
//            -0.119384766f,
//            -0.116744995f,
//            -0.12113953f,
//            -0.11517334f,
//            -0.117004395f,
//            -0.1133728f,
//            -0.11958313f,
//            -0.11151123f,
//            -0.118515015f,
//            -0.12579346f,
//            -0.11576843f,
//            -0.12086487f,
//            -0.11764526f,
//            -0.12495422f,
//            -0.119155884f,
//            -0.113861084f,
//            -0.120529175f,
//            -0.11895752f,
//            -0.11907959f,
//            -0.12869263f,
//            -0.1171875f,
//            -0.115753174f,
//            -0.113082886f,
//            -0.12208557f,
//            -0.113967896f,
//            -0.115478516f,
//            -0.11795044f,
//            -0.11984253f,
//            -0.12472534f,
//            -0.12055969f,
//            -0.11463928f,
//            -0.110198975f,
//            -0.11659241f,
//            -0.111831665f,
//            -0.11605835f,
//            -0.11540222f,
//            -0.11468506f,
//            -0.11607361f,
//            -0.10656738f,
//            -0.11766052f,
//            -0.123809814f,
//            -0.11958313f,
//            -0.115097046f,
//            -0.115097046f,
//            -0.12017822f,
//            -0.12182617f,
//            -0.12339783f,
//            -0.11553955f,
//            -0.11495972f,
//            -0.1083374f,
//            -0.12272644f,
//            -0.124923706f,
//            -0.11477661f,
//            -0.115356445f,
//            -0.111953735f,
//            -0.118927f,
//            -0.1136322f,
//            -0.12728882f,
//            -0.119781494f,
//            -0.11949158f,
//            -0.11477661f,
//            -0.120666504f,
//            -0.11785889f,
//            -0.11633301f,
//            -0.11392212f,
//            -0.12994385f,
//            -0.11457825f,
//            -0.114715576f,
//            -0.12258911f,
//            -0.12434387f,
//            -0.11619568f,
//            -0.117263794f,
//            -0.117996216f,
//            -0.1158905f,
//            -0.11463928f,
//            -0.12232971f,
//            -0.118637085f,
//            -0.12069702f,
//            -0.12461853f,
//            -0.12451172f,
//            -0.12823486f,
//            -0.12590027f,
//            -0.10784912f,
//            -0.12387085f,
//            -0.10998535f,
//            -0.12550354f,
//            -0.12686157f,
//            -0.11306763f,
//            -0.12315369f,
//            -0.122039795f,
//            -0.123550415f,
//            -0.120162964f,
//            -0.121917725f,
//            -0.1211853f,
//            -0.12609863f,
//            -0.124313354f,
//            -0.11929321f,
//            -0.116485596f,
//            -0.1138916f,
//            -0.118927f,
//            -0.11810303f,
//            -0.12382507f,
//            -0.12220764f,
//            -0.12931824f,
//            -0.11747742f,
//            -0.11300659f,
//            -0.112976074f,
//            -0.117126465f,
//            -0.11929321f,
//            -0.11968994f,
//            -0.11639404f,
//            -0.11778259f,
//            -0.12321472f,
//            -0.10861206f,
//            -0.123672485f,
//            -0.115737915f,
//            -0.12120056f,
//            -0.13166809f,
//            -0.12350464f,
//            -0.121414185f,
//            -0.12748718f,
//            -0.12327576f,
//            -0.11657715f,
//            -0.12030029f,
//            -0.1250763f,
//            -0.12338257f,
//            -0.12451172f,
//            -0.124938965f,
//            -0.12716675f,
//            -0.122039795f,
//            -0.11355591f,
//            -0.11755371f,
//            -0.11628723f,
//            -0.12046814f,
//            -0.120224f,
//            -0.11727905f,
//            -0.11917114f,
//            -0.1197052f,
//            -0.121795654f,
//            -0.124420166f,
//            -0.12437439f,
//            -0.1181488f,
//            -0.12059021f,
//            -0.12084961f,
//            -0.12452698f,
//            -0.119522095f,
//            -0.11541748f,
//            -0.11451721f,
//            -0.11882019f,
//            -0.11514282f,
//            -0.11817932f,
//            -0.124435425f,
//            -0.116378784f,
//            -0.11264038f,
//            -0.11846924f,
//            -0.119003296f,
//            -0.11904907f,
//            -0.11393738f,
//            -0.12361145f,
//            -0.12251282f,
//            -0.11294556f,
//            -0.12042236f,
//            -0.120224f,
//            -0.12043762f,
//            -0.11578369f,
//            -0.120788574f,
//            -0.11592102f,
//            -0.11781311f,
//            -0.11766052f,
//            -0.1209259f,
//            -0.12333679f,
//            -0.12460327f,
//            -0.11854553f,
//            -0.11798096f,
//            -0.118118286f,
//            -0.11462402f,
//            -0.123703f,
//            -0.1179657f,
//            -0.114715576f,
//            -0.12489319f,
//            -0.1204834f,
//            -0.12545776f,
//            -0.11352539f,
//            -0.12295532f,
//            -0.11250305f,
//            -0.12802124f,
//            -0.12182617f,
//            -0.12049866f,
//            -0.11576843f,
//            -0.115112305f,
//            -0.11968994f,
//            -0.11424255f,
//            -0.115997314f,
//            -0.11003113f,
//            -0.11314392f,
//            -0.11114502f,
//            -0.11152649f,
//            -0.11172485f,
//            -0.11541748f,
//            -0.111450195f,
//            -0.10946655f,
//            -0.11378479f,
//            -0.109298706f,
//            -0.109817505f,
//            -0.115615845f,
//            -0.11645508f,
//            -0.11174011f,
//            -0.11103821f,
//            -0.109558105f,
//            -0.11116028f,
//            -0.11351013f,
//            -0.11506653f,
//            -0.1177063f,
//            -0.12023926f,
//            -0.12336731f,
//            -0.11604309f,
//            -0.11392212f,
//            -0.12315369f,
//            -0.115234375f,
//            -0.120224f,
//            -0.12382507f,
//            -0.12580872f,
//            -0.11331177f,
//            -0.12249756f,
//            -0.11791992f,
//            -0.11994934f};
//    float Y[] = {-1.267395f,
//            -1.2653656f,
//            -1.2650757f,
//            -1.1845093f,
//            -1.230133f,
//            -1.2063293f,
//            -1.2241669f,
//            -1.2174072f,
//            -1.2159119f,
//            -1.2206421f,
//            -1.2151642f,
//            -1.2178345f,
//            -1.2417603f,
//            -1.2519073f,
//            -1.2344055f,
//            -1.2323761f,
//            -1.2545776f,
//            -1.2465363f,
//            -1.2453308f,
//            -1.2478027f,
//            -1.250946f,
//            -1.241394f,
//            -1.2552795f,
//            -1.2561035f,
//            -1.2512054f,
//            -1.2520752f,
//            -1.2463837f,
//            -1.2588959f,
//            -1.242218f,
//            -1.2498474f,
//            -1.265686f,
//            -1.2668152f,
//            -1.2776337f,
//            -1.2799377f,
//            -1.2723083f,
//            -1.2580261f,
//            -1.2601624f,
//            -1.2485657f,
//            -1.2452698f,
//            -1.2434082f,
//            -1.2424469f,
//            -1.2507935f,
//            -1.2481384f,
//            -1.2412262f,
//            -1.244873f,
//            -1.2367706f,
//            -1.2472229f,
//            -1.2404785f,
//            -1.2379456f,
//            -1.24086f,
//            -1.2367401f,
//            -1.2463226f,
//            -1.2463989f,
//            -1.2398834f,
//            -1.236557f,
//            -1.2261963f,
//            -1.2469025f,
//            -1.2370911f,
//            -1.2404785f,
//            -1.244339f,
//            -1.2473602f,
//            -1.2428894f,
//            -1.2300415f,
//            -1.2435608f,
//            -1.2456665f,
//            -1.2411957f,
//            -1.2408142f,
//            -1.2412415f,
//            -1.2515411f,
//            -1.24263f,
//            -1.2533112f,
//            -1.2424774f,
//            -1.2476501f,
//            -1.2319183f,
//            -1.2401276f,
//            -1.236969f,
//            -1.2436371f,
//            -1.2410126f,
//            -1.2385712f,
//            -1.2467804f,
//            -1.2311554f,
//            -1.2369537f,
//            -1.2414093f,
//            -1.2359619f,
//            -1.2375183f,
//            -1.2332153f,
//            -1.2364807f,
//            -1.2488403f,
//            -1.2362366f,
//            -1.2471466f,
//            -1.2483215f,
//            -1.2429504f,
//            -1.2476959f,
//            -1.242981f,
//            -1.252533f,
//            -1.2468414f,
//            -1.2550812f,
//            -1.2360535f,
//            -1.2344971f,
//            -1.2459106f,
//            -1.2328949f,
//            -1.2520447f,
//            -1.2381287f,
//            -1.2355652f,
//            -1.2478027f,
//            -1.24469f,
//            -1.2393036f,
//            -1.2284851f,
//            -1.232254f,
//            -1.2149963f,
//            -1.2231598f,
//            -1.235733f,
//            -1.2371216f,
//            -1.2264099f,
//            -1.2325134f,
//            -1.2492981f,
//            -1.2400818f,
//            -1.2319489f,
//            -1.2342377f,
//            -1.2407379f,
//            -1.2352448f,
//            -1.2398682f,
//            -1.240982f,
//            -1.2354431f,
//            -1.2301941f,
//            -1.2341919f,
//            -1.2528381f,
//            -1.2380219f,
//            -1.2401886f,
//            -1.2243805f,
//            -1.2380371f,
//            -1.2354431f,
//            -1.2265167f,
//            -1.24617f,
//            -1.2497101f,
//            -1.2486725f,
//            -1.2439117f,
//            -1.2280273f,
//            -1.2346191f,
//            -1.2486572f,
//            -1.2578735f,
//            -1.2569122f,
//            -1.2822571f,
//            -1.2650757f,
//            -1.2858276f,
//            -1.2744751f,
//            -1.2753143f,
//            -1.2776031f,
//            -1.2771912f,
//            -1.2689056f,
//            -1.2754059f,
//            -1.2727814f,
//            -1.2787628f,
//            -1.2837982f,
//            -1.2800903f,
//            -1.2872772f,
//            -1.2766724f,
//            -1.28125f,
//            -1.2778473f,
//            -1.2713318f,
//            -1.2740021f,
//            -1.2801208f,
//            -1.2793884f,
//            -1.2740784f,
//            -1.2858124f,
//            -1.2789459f,
//            -1.2874298f,
//            -1.279068f,
//            -1.2787628f,
//            -1.2787476f,
//            -1.2812195f,
//            -1.2762756f,
//            -1.2776947f,
//            -1.2799377f,
//            -1.2768555f,
//            -1.2832947f,
//            -1.2733154f,
//            -1.2732391f,
//            -1.2841644f,
//            -1.2808533f,
//            -1.2807465f,
//            -1.2803802f,
//            -1.2827911f,
//            -1.2806854f,
//            -1.2729645f,
//            -1.2726746f,
//            -1.2734985f,
//            -1.2798462f,
//            -1.2760925f,
//            -1.2823486f,
//            -1.2816467f,
//            -1.2833557f,
//            -1.280716f,
//            -1.2894287f,
//            -1.2904358f,
//            -1.2848053f,
//            -1.2786865f,
//            -1.2801208f,
//            -1.2875519f,
//            -1.2833252f,
//            -1.2828674f,
//            -1.2826385f,
//            -1.2829285f,
//            -1.280899f,
//            -1.2823792f,
//            -1.2758942f,
//            -1.2736511f,
//            -1.2702332f,
//            -1.2813873f,
//            -1.2761688f,
//            -1.2723694f,
//            -1.2799072f,
//            -1.2732086f,
//            -1.2788086f,
//            -1.2802124f,
//            -1.2650604f,
//            -1.2780914f,
//            -1.2615967f,
//            -1.2724457f,
//            -1.2571564f,
//            -1.2649536f,
//            -1.2686005f,
//            -1.2680359f,
//            -1.2724762f,
//            -1.2619934f,
//            -1.2617645f,
//            -1.26268f,
//            -1.2639313f,
//            -1.262619f,
//            -1.2691803f,
//            -1.2764435f,
//            -1.2616577f,
//            -1.2638702f,
//            -1.2710114f,
//            -1.2715454f,
//            -1.2682953f,
//            -1.2755127f,
//            -1.2778625f,
//            -1.2760468f,
//            -1.2669525f,
//            -1.268753f,
//            -1.2759552f,
//            -1.270874f,
//            -1.2740479f,
//            -1.2768555f,
//            -1.2805176f,
//            -1.271698f,
//            -1.2783356f,
//            -1.2832336f,
//            -1.280838f};
//    float Z[]={
//            9.732895f,
//            9.691391f,
//            9.696426f,
//            9.721634f,
//            9.725876f,
//            9.74852f,
//            9.748077f,
//            9.7547f,
//            9.75827f,
//            9.75296f,
//            9.756638f,
//            9.760391f,
//            9.724609f,
//            9.736221f,
//            9.758194f,
//            9.716263f,
//            9.801056f,
//            9.738739f,
//            9.740723f,
//            9.743393f,
//            9.756622f,
//            9.754868f,
//            9.760162f,
//            9.76239f,
//            9.757782f,
//            9.757187f,
//            9.753693f,
//            9.751556f,
//            9.737991f,
//            9.743744f,
//            9.72467f,
//            9.715805f,
//            9.759201f,
//            9.756546f,
//            9.746475f,
//            9.787704f,
//            9.755875f,
//            9.7621f,
//            9.749573f,
//            9.760651f,
//            9.753082f,
//            9.762146f,
//            9.745209f,
//            9.775116f,
//            9.7565155f,
//            9.760239f,
//            9.761948f,
//            9.758621f,
//            9.75444f,
//            9.751373f,
//            9.748764f,
//            9.761719f,
//            9.751709f,
//            9.743195f,
//            9.751175f,
//            9.761551f,
//            9.754837f,
//            9.7668f,
//            9.770142f,
//            9.759308f,
//            9.764053f,
//            9.76236f,
//            9.760513f,
//            9.765259f,
//            9.759094f,
//            9.756851f,
//            9.751633f,
//            9.760483f,
//            9.766754f,
//            9.74794f,
//            9.772598f,
//            9.763138f,
//            9.768402f,
//            9.763733f,
//            9.767548f,
//            9.773788f,
//            9.767044f,
//            9.757919f,
//            9.764328f,
//            9.758682f,
//            9.757568f,
//            9.757858f,
//            9.762665f,
//            9.766495f,
//            9.759476f,
//            9.774292f,
//            9.772003f,
//            9.772781f,
//            9.767044f,
//            9.773788f,
//            9.768494f,
//            9.763489f,
//            9.779251f,
//            9.773605f,
//            9.768494f,
//            9.774368f,
//            9.768402f,
//            9.75679f,
//            9.772842f,
//            9.775864f,
//            9.773331f,
//            9.765778f,
//            9.782074f,
//            9.784821f,
//            9.7834015f,
//            9.776764f,
//            9.770126f,
//            9.770767f,
//            9.76796f,
//            9.779129f,
//            9.776093f,
//            9.776764f,
//            9.771835f,
//            9.779251f,
//            9.7786255f,
//            9.772232f,
//            9.773239f,
//            9.771957f,
//            9.783798f,
//            9.772446f,
//            9.773712f,
//            9.769836f,
//            9.773148f,
//            9.778976f,
//            9.771042f,
//            9.770737f,
//            9.7630005f,
//            9.77179f,
//            9.762085f,
//            9.778854f,
//            9.739487f,
//            9.754639f,
//            9.757263f,
//            9.7595825f,
//            9.766403f,
//            9.760345f,
//            9.772583f,
//            9.765808f,
//            9.76796f,
//            9.779022f,
//            9.749451f,
//            9.775085f,
//            9.78006f,
//            9.782455f,
//            9.776047f,
//            9.769501f,
//            9.777161f,
//            9.776184f,
//            9.764725f,
//            9.777664f,
//            9.776749f,
//            9.779495f,
//            9.779633f,
//            9.770813f,
//            9.776108f,
//            9.775604f,
//            9.776901f,
//            9.780289f,
//            9.77803f,
//            9.771866f,
//            9.755295f,
//            9.771927f,
//            9.767761f,
//            9.77066f,
//            9.7715f,
//            9.770889f,
//            9.772385f,
//            9.779251f,
//            9.776993f,
//            9.776993f,
//            9.776016f,
//            9.778351f,
//            9.779404f,
//            9.774063f,
//            9.772079f,
//            9.774261f,
//            9.770004f,
//            9.767593f,
//            9.761017f,
//            9.764221f,
//            9.767929f,
//            9.77179f,
//            9.766373f,
//            9.762482f,
//            9.769287f,
//            9.76033f,
//            9.763031f,
//            9.770706f,
//            9.763428f,
//            9.761642f,
//            9.7582245f,
//            9.768768f,
//            9.765198f,
//            9.7647705f,
//            9.767868f,
//            9.769119f,
//            9.779175f,
//            9.77449f,
//            9.772003f,
//            9.775085f,
//            9.779739f,
//            9.778122f,
//            9.77359f,
//            9.777145f,
//            9.775833f,
//            9.782181f,
//            9.784012f,
//            9.784485f,
//            9.774368f,
//            9.784042f,
//            9.781998f,
//            9.782013f,
//            9.779648f,
//            9.771103f,
//            9.766113f,
//            9.756149f,
//            9.7539215f,
//            9.745239f,
//            9.7344055f,
//            9.735962f,
//            9.72287f,
//            9.739914f,
//            9.723755f,
//            9.712387f,
//            9.718704f,
//            9.707687f,
//            9.72374f,
//            9.723236f,
//            9.715363f,
//            9.702377f,
//            9.711914f,
//            9.720367f,
//            9.728699f,
//            9.72644f,
//            9.732193f,
//            9.738617f,
//            9.748871f,
//            9.742691f,
//            9.748169f,
//            9.745407f,
//            9.736755f,
//            9.751343f,
//            9.754379f,
//            9.75946f,
//            9.758743f,
//            9.760239f,
//            9.74791f,
//            9.75824f,
//            9.756882f,
//            9.759064f
//    };












//float secondMoment = 0;
////        float fourthMoment = 0;
////        float kurt =0;
////        float secSum =0;
////        float forSum = 0;
//      for(int i = 0; i<n; i++){
////            secSum += Math.pow(arr[i]-mean,2);
////        }
////        secondMoment = secSum/n;
////        for(int i =0; i<n; i++){
////            forSum+= Math.pow(arr[i]-mean,4);
////        }
////        fourthMoment = forSum/n;
////        kurt = fourthMoment/(float)Math.pow(secondMoment,2);
////        return kurt;
//        float secondMoment = 0;
//        float fourthMoment = 0;
//        float kurt =0;
//        float secSum =0;
//        float forSum = 0;
//        float mean = meanAbs(arr);
//        for(int i = 0; i<n; i++){
//            secSum += Math.pow(Math.abs(arr[i])-mean,2);
//        }
//        secondMoment = secSum/n;
//        for(int i =0; i<n; i++){
//            forSum+= Math.pow(Math.abs(arr[i])-mean,4);
//        }
//        fourthMoment = forSum/n;
//        kurt = fourthMoment/(float)Math.pow(secondMoment,2);
//        return kurt;

//        float[][] inputFeatures2 = {{0.048802063f,-1.2059541f,9.624384f,-0.14627075f,
//                -1.1542358f,9.76619f,1.029089f,0.24410461f,0.9672016f,-2.3448565E-5f,
//                5.6408396E-7f,1.0402331E-5f,42.96204f,50.857002f,50.06438f,
//                -0.1942749f,-3.0106049f,1.473938f,8.244141f,0.7777405f,11.491638f,
//                13.634982f,-0.006741563f,0.0016017832f,2.3204627E-4f,61.723206f,
//                0.36259767f,0.057397734f,0.29051292f,0.31847906f,1.2176379f,
//                9.624384f,0.14627075f,1.1542358f,9.76619f,0.9797841f,0.17683469f,
//                0.9672016f,-2.5290323E-5f,-3.0916617E-5f,1.0402331E-5f,44.82219f,68.03395f,
//                50.06438f,0.010101318f,0.31933594f,1.473938f,8.244141f,3.0106049f,
//                11.491638f,13.24374f,9.79384f,0.4692433f,4.4760766f,11.6521845f,
//                7.176108f,0.0f,0.0f}};